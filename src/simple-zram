#!/bin/env bash

# Simple-ZRAM is a simple script to create and enable zram swap devices
# Copyright (C) 2024  Michael Schaecher <michaelleeschaecher@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

set -eo pipefail

# shellcheck disable=SC1091
source /etc/simple-zram.conf

_appName=simple-zram
_appVersion="$(cat /usr/share/docs/${_appName}/version 2>/dev/null || echo "unknown")"

_totalRAM="$(awk '/MemTotal:/ {print $2}' /proc/meminfo)"
_usedRAM="$(awk '/Active:/ {print $2}' /proc/meminfo)"

# Do some math to calculate if more then 50% of the RAM is used
_availableRAM="$(( 100 - (( _usedRAM * 100 ) / _totalRAM) ))"

_versionInfo="$(cat <<EOF
${_appName} - version: ${_appVersion}
This script creates and enables a zram swap device with the following parameters:

Total RAM:             $(( _totalRAM / 1024000 ))GB
Used RAM:              $(( _usedRAM / 1024000 ))GB
Available RAM:         ${_availableRAM}%

ZRAM Device:           $(zramctl -n | awk '{print $1}')

Swap Size:             ${SWAP_SIZE}
Swap Usage:            $(free -h | awk '/Swap:/ {print $3}')

Compression Algorithm: ${COMPRESSION}

Copyright (C) 2024 Michael Schaecher <michaelleeschaecher@gmail.com> GNU v3 License
EOF
)"

case "${1}" in info ) echo "${_versionInfo}" ; exit 0 ;; esac

# Test if we are root
test "$(id -u)" -eq 0 || { echo "This script must be run as root" ; exit 1 ; }

test "${TOTAL_RAM}" -gt "33554432" || { echo "simple-zram requires at least 32MB of RAM" ; exit 1 ; }

test "${AVAILABLE_RAM}" -lt "50" ||
{ echo "simple-zram requires at least 50% of the RAM to be free" ; exit 1 ; }

if swapon --show | grep -q '/dev/zram' ; then swapoff -a ; fi

# Reset the zram devices first
while IFS= read -r LINE ; do zramctl --reset "${LINE}" ; done < <(zramctl -n | awk '{print $1}')

WHICH_ZRAM="$(zramctl --size "${SWAP_SIZE}" --algorithm "${COMPRESSION}" --find)" ||
{ echo "Failed to create zram device" ; exit 1 ; }

mkswap -L SWAP "${WHICH_ZRAM}" ; swapon "${WHICH_ZRAM}"

exit 0
